/*描述
把M个同样的苹果放在N个同样的盘子里，允许有的盘子空着不放，问共有多少种不同的分法？（用K表示）5，1，1和1，5，1 是同一种分法。
输入
第一行是测试数据的数目t（0 <= t <= 20）。以下每行均包含二个整数M和N，以空格分开。1<=M，N<=10。
输出
对输入的每组数据M和N，用一行输出相应的K。
样例输入
1
7 3
样例输出
8*/

//m:apples,n:plates;
#include<iostream>
using namespace std;

int count(int m, int n);
int main()
{
	int t;
	cin >> t;
	for(int i=0;i<t;i++)
	{
		int apples, plates;
		cin >> apples >> plates;

		int result = count(apples, plates);
		cout << result << endl;
	}
	return 0;
}
int count(int m, int n)
{
	if (m <= 1 || n <= 1)
	{
		return 1;
	}
	if (m < n)
	{
		return count(m, m);
	}
	else
	{
		return count(m, n - 1) + count(m - n, n);
	}
}
/*
思路：
第一层的两种情况：
1. 苹果数量<盘子数量
假设每个盘子都只放一个苹果，至少有空盘。空盘子无意义，去掉空盘子。
function(m,n) => function(m,m);
2. 苹果数量>盘子数量
该情况又可以分成两种情况：
一：有空盘子
既然有空盘子，那么至少存在一个空盘子，空盘子无意义，去掉。
function(m,n) => function(m,n-1);
二：无空盘子
无空盘子，说明每个盘子至少放置一个苹果。所以每个盘子可以同时去掉一个苹果，该动作并不影响放置方法。
function(m,n) => function(m-n,m);
